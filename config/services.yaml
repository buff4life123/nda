# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en|pt

    products_images_directory: '%kernel.project_dir%/public_html/upload/product'
    products_images_width: '640'
    products_images_height: '480'

    gallery_images_directory: '%kernel.project_dir%/public_html/upload/gallery'
    gallery_images_width: '640'
    gallery_images_height: '480'

    banner_images_directory: '%kernel.project_dir%/public_html/upload/banner'
    banner_images_width: '1920'
    banner_images_height: '1080'

    photo_service_directory: '%kernel.project_dir%/public_html/upload/photo_service'
    photo_service_width: '1920'
    photo_service_height: '1080'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $projectDir: '%kernel.project_dir%' # matches on constructor argument name

    # translation default pt or user set locale in session
    App\EventSubscriber\LocaleSubscriber:
        arguments: ['%kernel.default_locale%']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    file_uploader.products:
        class: App\Service\FileUploader
        arguments:
            $targetDir: '%products_images_directory%'

    file_uploader.gallery:
        class: App\Service\FileUploader
        arguments:
            $targetDir: '%gallery_images_directory%'

    file_uploader.banner:
        class: App\Service\FileUploader
        arguments:
            $targetDir: '%banner_images_directory%'

    file_uploader.photo_service:
        class: App\Service\FileUploader
        arguments:
            $targetDir: '%photo_service_directory%'

    App\Service\FileUploader: '@file_uploader.products'

    image_resizer.products:
        class: App\Service\ImageResizer
        arguments:
            $path: '%products_images_directory%'
            $width: '%products_images_width%'
            $height: '%products_images_height%'

    image_resizer.gallery:
        class: App\Service\ImageResizer
        arguments:
            $path: '%gallery_images_directory%'
            $width: '%gallery_images_width%'
            $height: '%gallery_images_height%'

    image_resizer.banner:
        class: App\Service\ImageResizer
        arguments:
            $path: '%banner_images_directory%'
            $width: '%banner_images_width%'
            $height: '%banner_images_height%'

    image_resizer.photo_service:
        class: App\Service\ImageResizer
        arguments:
            $path: '%photo_service_directory%'
            $width: '%photo_service_width%'
            $height: '%photo_service_height%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\ImageResizer: '@image_resizer.products'

    App\Controller\ProductController:
        bind:
            App\Service\FileUploader: '@file_uploader.products'
            App\Service\ImageResizer: '@image_resizer.products'
        arguments:
            - '%products_images_directory%'

    App\Controller\GalleryController:
        bind:
            App\Service\FileUploader: '@file_uploader.gallery'
            App\Service\ImageResizer: '@image_resizer.gallery'
        arguments:
            - '%gallery_images_directory%'

    App\Controller\CompanyController:
        bind:
            App\Service\FileUploader: '@file_uploader.gallery'
            App\Service\ImageResizer: '@image_resizer.gallery'
        arguments:
            - '%gallery_images_directory%'

    App\Controller\BannerController:
        bind:
            App\Service\FileUploader: '@file_uploader.banner'
            App\Service\ImageResizer: '@image_resizer.banner'
        arguments:
            - '%banner_images_directory%'

    App\Controller\PhotoServiceController:
        bind:
            App\Service\FileUploader: '@file_uploader.photo_service'
            App\Service\ImageResizer: '@image_resizer.photo_service'
        arguments:
            - '%photo_service_directory%'

    App\Service\ExperienceApi:
        public: true

security:
    encoders:
        App\Entity\User: auto